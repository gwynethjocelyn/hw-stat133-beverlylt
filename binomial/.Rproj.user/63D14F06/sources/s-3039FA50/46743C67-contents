---
title: "lab09-beverly-tanada"
author: "Beverly Leslie Tanada"
date: "4/2/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
```


```{r}
head(USArrests)
```

```{r}
states <- rownames(USArrests)
head(states)
```

#### Number of characters
```{r}
num_chars <- nchar(states)
num_chars
```

#### Case folding
```{r}
tolower(states)
```

```{r}
toupper(states)
```

```{r}
casefold(states)
```

#### Length of State Names
```{r}
char_freqs <- table(num_chars)
char_freqs
```


```{r}
barplot(char_freqs, xlab = "Character numbers", ylab = "Frequencies", main = "Number of characters in each state")
```

# Paste
```{r}
paste(states[1:5], num_chars[1:5], sep = " = ")
```

```{r}
paste(states[1:5], collapse = '')
```

# Permutations

The number of permutations that can be formed by using all the given letters in ALABAMA
```{r}
factorial(7)/ (factorial(4))
```

# Substrings

First 3 letters
```{r}
substr(states, 1, 3)
```

```{r}
last_3 <- substr(states, num_chars - 2, num_chars)
last_3
```

```{r}
paste0(substr(states, 1,1), last_3)
```

# Challenge
```{r}
states_list <- vector("list", length(char_freqs)) 
names <- c()
for(i in 1:length(char_freqs)){
   names[i] <- paste0(levels(factor(num_chars))[i], "-chars")
}
names(states_list) <- names
```

```{r}
for(i in 1:11){
  
  if(as.integer(levels(factor(num_chars))[i]) %% 2 == 0){
    states_list[i] <- toupper(paste(states[num_chars == levels(factor(num_chars))[i]], collapse = ", "))
  }
  else {
    states_list[i] <- tolower(paste(states[num_chars == levels(factor(num_chars))[i]], collapse = ", "))
  }
}
states_list
```

```{r}
paste(states[num_chars == levels(factor(num_chars))[1]], collapse = ", ")
```

# Converting from Fahrenheit degrees
```{r}
to_celsius <- function(x = 1) {
  (x - 32) * (5/9)
}

to_kelvin <- function(x = 1) {
  (x + 459.67) * (5/9)
}

to_reaumur <- function(x = 1) {
  (x - 32) * (4/9)
}

to_rankine <- function(x = 1) {
  x + 459.67
}
```

```{r}
temp_convert <- function(x = 1, to = "celsius") {
  to <- tolower(to)
  switch(to,
         "celsius" = to_celsius(x),
         "kelvin" = to_kelvin(x),
         "reaumur" = to_reaumur(x),
         "rankine" = to_rankine(x))
}
```

```{r}
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
```

# Names of Files
```{r}
vec1 <- c()
for(i in 1:10){
  vec1[i] <- paste0("file",i,".csv")
}
vec1
```

```{r}
vec2 <- c()
i = 1
while(i < 11){
  vec2[i] <- paste0("file",i,".csv")
  i = i+1
}
vec2

```

```{r}
vec3 <- c()
counter = 1
repeat {
  if(counter > 10){
    break
  }
  vec3[counter] <- paste0("file",counter,".csv")
  counter = counter + 1
}
vec3
```

```{r}
paste0("dataset", substr(vec1, 5, length(vec1)))
```

```{r}
# name of output file
outfile <- "output.txt"

# writing to 'outfile.txt'
cat("---", file = outfile)
cat('\ntitle: "Some title"', file = outfile, append = TRUE)
cat('\nauthor: "Your name"', file = outfile, append = TRUE)
cat('\ndate: "today\'s date"', file = outfile, append = TRUE)
cat('\noutput: html_document', file = outfile, append = TRUE)
cat('\n---', file = outfile, append = TRUE)

cat("\n\nThis is the first line", file = outfile, append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
    file = outfile, append = TRUE)
```

# Valid Color Names
```{r}
#' @title Color Function
#' @description test if a given name—in English—is a valid R color
#' @param c character 
#' @return TRUE (if a valid R color) / FALSE(if not a valid R color)
is_color <- function(c) {
  if(c %in% colors()){
    return(TRUE)
  }
  else {
    return(FALSE)
  }
}
```

```{r}
is_color('yellow') 

is_color('blu')

is_color('turkuoise')
```

# Plot with a valid color
```{r}
#' @title Color Plot
#' @description produce a simple scatter plot with random numbers
#' @param col name of color
#' @return simple scatter plot with random numbers
colplot <- function(col){
  if(is_color(col) == TRUE){
    x1 <- runif(10,0,1)
    y1 <- rnorm(10)
    plot(x = x1, y = y1, col = col, main = paste("Testing color", col), cex = 0.8)
  }
  else{
    stop(paste("invalid color", col))
  }
}
```

```{r}
colplot('tomato')
```

```{r}
colplot('tomate')
```

